<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <control namespace="Manny"
    constructor="ReactExpandableToggles"
    version="1.0.3"
    display-name-key="React-Expandable-Toggles"
    description-key="This control helps rendering an associated many to many entity in the form of an expandable list of toggles. It speeds up associating the records and user can read the description of what they are about to select."
    control-type="virtual">
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="value"
      display-name-key="Lookup_field"
      description-key="The lookup field"
      of-type="Lookup.Simple"
      usage="bound"
      required="true" />
    <property name="config_entity_name"
      display-name-key="Configuration_Entity_Name"
      description-key="Name of the configuration entity that contains master data"
      of-type="SingleLine.Text"
      usage="input"
      required="true" />
    <property name="config_nn_relationship_name"
      display-name-key="Configuration_NN_Relationship_Name"
      description-key="Schema name of the many to many relationship"
      of-type="SingleLine.Text"
      usage="input"
      required="true" />
    <property name="config_entity_fieldname"
      display-name-key="Configuration_Entity_Field_Name"
      description-key="Name of the field inside config entity that contains master data"
      of-type="SingleLine.Text"
      usage="input"
      required="true" />
    <property name="config_entity_idfieldname"
      display-name-key="Configuration_Entity_Id_Field_Name"
      description-key="Name of the ID field for the config entity"
      of-type="SingleLine.Text"
      usage="input"
      required="true" />
    <property name="config_entity_desc_fieldname"
      display-name-key="Configuration_Entity_Desc_Field_Name"
      description-key="Name of the field inside config entity that contains description data"
      of-type="SingleLine.Text"
      usage="input"
      required="true" />
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts"
        order="1" />
      <platform-library name="React"
        version="16.8.6" />
      <platform-library name="Fluent"
        version="8.29.0" />
      <css path="styles/RadioListControl.css"
        order="1" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES      
      <resx path="strings/ReactRadioList.1033.resx" version="1.0.0" />
      -->
    </resources>
    <feature-usage>
      <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />-->
      <uses-feature name="Utility"
        required="true" />
      <uses-feature name="WebAPI"
        required="true" />
    </feature-usage>
  </control>
</manifest>